name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  testing:
    name: Stage1Testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Run Docker Compose
        run: |
          docker-compose -f ./docker-compose.yaml up -d
        
      - name: Install curl
        run: sudo apt-get install -y curl


      - name: Test Connections from Backend Container
        run: |
          # Test the connection from expensy_backend to mongodb
           docker exec expensy_backend curl -s http://mongodb:27017

          # Test the connection from expensy_backend to redis
           docker exec expensy_backend curl -s http://redis:6379

          # Test the connection from expensy_backend to expensy_frontend
           docker exec expensy_backend curl -s http://expensy_frontend:3000


      - name: Tear Down Docker Containers
        if: success()
        run: |
          docker-compose down

  deployment:
    name: Stage2Deployment
    needs: testing
    runs-on: DESKTOP-EQPVP6B

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Connect to Self-Hosted Runner
        run: |
          echo "Using self-hosted runner on local machine."

      - name: Run Terraform Init
        run: |
          terraform init
        working-directory: ./terraform

      - name: Run Terraform Apply
        run: |
          terraform apply -auto-approve
        working-directory: ./terraform

      - name: Apply Kubernetes Manifest
        run: |
          kubectl apply -f ./cluster-manifest.yaml

      - name: Test Kubernetes Deployments
        run: |
          kubectl exec pod1 -- curl -s http://pod2:port
          kubectl exec pod2 -- curl -s http://pod3:port
          kubectl exec pod3 -- curl -s http://pod4:port
