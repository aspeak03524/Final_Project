name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  testing:
    name: Stage1Testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Run Docker Compose
        run: |
          docker-compose -f ./docker-compose.yaml up -d
        
      - name: Install curl
        run: sudo apt-get install -y curl


      - name: Check if all containers are running
        run: |
          # List all running containers to check their status
          docker ps --filter "status=running"


      - name: Tear down the containers
        run: |
         # Stop and remove all containers started by docker-compose
         docker-compose down

  deployment:
    name: Stage2Deployment
    needs: testing
    runs-on: self-hosted

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Connect to Self-Hosted Runner
        run: |
          echo "Using self-hosted runner on local machine."

       #name: Run Terraform Init
        #run: |
          #terraform init
        #working-directory: ./terraform

      - name: Run Terraform Apply
        run: |
          terraform apply -auto-approve
        working-directory: ./terraform

      - name: Terraform Destroy
        if: failure()  # Runs only if the previous step failed
        run: |
          echo "Destroying infrastructure because Terraform apply failed..."
          terraform destroy -auto-approve

      - name: Update kubeconfig for EKS Cluster
        run: aws eks --region eu-south-2 update-kubeconfig --name andrew-cluster5

      - name: Terraform Destroy
        if: failure()  # Runs only if the previous step failed
        run: |
          echo "Destroying infrastructure because Terraform apply failed..."
          terraform destroy -auto-approve

      - name: Apply Kubernetes Manifest
        run: |
          kubectl apply -f ./cluster-manifest.yaml

      - name: Terraform Destroy
        if: failure()  # Runs only if the previous step failed
        run: |
          echo "Destroying infrastructure because Terraform apply failed..."
          terraform destroy -auto-approve

      - name: Check if all Kubernetes pods are running
        run: |
          # Get the status of all pods in all namespaces
          kubectl get pods --all-namespaces
    
          # Check if any pod is NOT in Running state
          if kubectl get pods --all-namespaces --no-headers | grep -v "Running"; then
          echo "Some pods are not running."
          exit 1
          else
          echo "All pods are running."
          fi


      - name: Terraform Destroy
        if: failure()  # Runs only if the previous step failed
        run: |
          echo "Destroying infrastructure because Terraform apply failed..."
          terraform destroy -auto-approve
